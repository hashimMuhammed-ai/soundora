<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
    body {
        background-color: #eef2f7;
        font-family: 'Roboto', sans-serif;
    }

    .content-main {
        margin-top: 40px;
        margin-left: 260px;
        padding: 25px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    }

    .headname {
        margin-left: 288px;
        margin-top: 80px;
        font-size: 36px;
        font-weight: bold;
        color: #343a40;
    }

    .form-label {
        color: #495057;
        font-weight: 600;
    }

    .form-control, .form-select {
        border: 1px solid #ced4da;
        border-radius: 8px;
        padding: 12px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .form-control:focus, .form-select:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .btn-submit {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        font-weight: bold;
        transition: background-color 0.2s ease;
    }

    .btn-submit:hover {
        background-color: #0056b3;
    }

    .image-upload-section {
        background-color: #f8f9fa;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
    }

    .existing-image-container {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 15px;
    }

    .existing-image {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .delete-image-btn {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .delete-image-btn:hover {
        background-color: #c82333;
    }

    .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .thumbnails-container {
        display: flex;
        gap: 15px;
        overflow-x: auto;
        padding-bottom: 10px;
    }

    .thumbnail {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .crop-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
    }
    .crop-save-btn {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    .crop-save-btn:hover {
        background-color: #218838;
    }
    .crop-preview {
        max-width: 200px;
        max-height: 200px;
        margin-top: 10px;
    }

    /* Cropper Modal Styles */
    #cropperModal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.5);
    }

    .crop-modal-content {
        background-color: #fefefe;
        margin: 10% auto;
        padding: 20px;
        border-radius: 10px;
        width: 80%;
        max-width: 800px;
        position: relative;
    }

    #cropperImage {
        max-width: 100%;
        max-height: 500px;
    }

    .crop-modal-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 15px;
    }

    #addedImagesContainer {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 15px;
    }

    #addedImagesContainer .thumbnail {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 10px;
        position: relative;
    }

    .remove-image-btn {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: red;
        color: white;
        border: none;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }
    #flexy{
        display: flex;
        flex-direction: column;
        gap: 20px;
    }
    .content-title{
        margin-bottom: 30px;
    margin-top: 16px;
    font-size: 34px;
    }
</style>
<section class="content-main">
    <div class="row">
        <div class="col-12">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
            <div class="col-lg-8 mx-auto">
                <div class="card mb-4">
                    <div class="card-body">
                        <% if (product) { %>
                        <form method="POST" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateForm()">
                            <div class="mb-4" id="flexy">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name" value="<%= product.productName %>">
                                <div id="productName-error" class="error-message"></div>
                            </div>

                            <div class="mb-4" id="flexy">
                                <label for="description" class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description" class="form-control" id="description" rows="4"><%= product.description %></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mb-4" id="flexy">
                                    <label for="category" class="form-label">Category</label>
                                    <select name="category" class="form-select" id="category">
                                        <% cat.forEach(function(category) { %>
                                            <option value="<%= category._id %>" 
                                                <%= product.category.toString() === category._id.toString() ? 'selected' : '' %>>
                                                <%= category.name %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-6 mb-4" id="flexy">
                                    <label for="quantity" class="form-label">Quantity</label>
                                    <input type="number" placeholder="Enter quantity" name="quantity" class="form-control" id="quantity" value="<%= product.quantity %>">
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-4 mb-4" id="flexy">
                                    <label for="regularPrice" class="form-label">Regular Price</label>
                                    <input type="number" placeholder="Enter regular price" name="regularPrice" class="form-control" id="regularPrice" value="<%= product.regularPrice %>">
                                </div>
                                <div class="col-lg-4 mb-4" id="flexy">
                                    <label for="salePrice" class="form-label">Sale Price</label>
                                    <input type="number" placeholder="Enter sale price" name="salePrice" class="form-control" id="salePrice" value="<%= product.salePrice %>">
                                </div>
                                <div class="col-lg-6 mb-4" id="flexy">
                                    <label for="brand" class="form-label">Brand</label>
                                    <select name="brand" class="form-select" id="brand">
                                        <% brand.forEach(function(brand) { %>
                                            <option value="<%= brand._id %>" <%= (product.brand && product.brand.toString() === brand._id.toString()) ? 'selected' : '' %>>
                                                <%= brand.brandName %>
                                            </option>
                                        <% }); %>
                                    </select>
                                </div>
                                
                            </div>

                            <div class="card mb-4 image-upload-section">
                                <div class="card-header">
                                    <h4>Existing Images</h4>
                                </div>
                                <div class="card-body">
                                    <div id="existingImagesContainer" class="thumbnails-container">
                                        <% product.productImages.forEach((image, index) => { %>
                                            <div class="existing-image-container" id="existingImageContainer<%= index %>">
                                                <img src="/uploads/product-images/<%= image %>" alt="Product Image" class="existing-image">
                                                <button type="button" class="delete-image-btn" onclick="deleteExistingImage('<%= image %>', '<%= index %>')">Delete</button>
                                            </div>
                                        <% }); %>
                                    </div>
                                </div>
                            </div>

                            <div class="card mb-4 image-upload-section">
                                <div class="card-header">
                                    <h4>Add/Replace Images</h4>
                                </div>
                                <div class="card-body">
                                    <div class="image-upload-container">
                                        <input type="file" 
                                            id="imageUpload" 
                                            name="images" 
                                            class="form-control" 
                                            accept="image/jpeg,image/png,image/gif,image/webp" 
                                            multiple 
                                            onchange="openCropperModal(event)">
                                                                                
                                        <!-- Hidden input to store cropped images -->
                                        <input type="hidden" id="deletedImagesInput" name="deletedImages" value="[]">
                                        
                                        <!-- Added Images Container -->
                                        <div id="addedImagesContainer" class="mt-3"></div>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-4">
                                <label for="isListed" class="form-label">Product Status</label>
                                <select name="isListed" class="form-select" id="isListed">
                                    <option value="true" <%= product.isListed ? 'selected' : '' %>>Listed</option>
                                    <option value="false" <%= !product.isListed ? 'selected' : '' %>>Unlisted</option>
                                </select>
                            </div>

                            <div class="d-grid">
                                <button type="submit" class="btn btn-submit">Update Product</button>
                            </div>
                        </form>
                        <% } else { %>
                            <p>Product not found.</p>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Cropper Modal -->
<div id="cropperModal" class="modal">
    <div class="crop-modal-content">
        <h3>Crop Image</h3>
        <div>
            <img id="cropperImage" src="" alt="Image to crop">
        </div>
        <div class="crop-modal-buttons">
            <button type="button" class="btn btn-secondary" onclick="closeCropperModal()">Cancel</button>
            <button type="button" class="btn btn-primary" onclick="saveCroppedImage()">Complete Crop</button>
        </div>
    </div>
</div>

<div id="product-data" data-images='<%- JSON.stringify(product.productImages) %>'></div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.js" integrity="sha512-lR8d1BXfYQuiqoM/LeGFVtxFyspzWFTZNyYIiE5O2CcAGtTCRRUMLloxATRuLz8EmR2fYqdXYlrGh+D6TVGp3g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    let existingImages = JSON.parse(document.getElementById('product-data').dataset.images)
    let deletedImages = [];
    let cropper;
    let croppedImagesCount = 0;

    function validateForm() {
    const form = document.querySelector('form');
    const totalImages = existingImages.length - deletedImages.length + croppedImagesCount;

    if (totalImages < 3 || totalImages > 4) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Image Count',
            text: 'You must have between 3 and 4 images'
        });
        return false;
    }

    const formData = new FormData(form);
    
    formData.set('deletedImages', JSON.stringify(deletedImages));

    const fileInput = document.getElementById('imageUpload');
    
    if (fileInput && fileInput.files.length > 0) {
        formData.delete('images');
        
        for (let i = 0; i < fileInput.files.length; i++) {
            formData.append('images', fileInput.files[i]);
        }
    }

    const addedImagesContainer = document.getElementById('addedImagesContainer');
    const croppedImages = addedImagesContainer.getElementsByTagName('img');
    
    function dataURLtoFile(dataUrl, filename) {
        let arr = dataUrl.split(','),
            mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]),
            n = bstr.length,
            u8arr = new Uint8Array(n);
        
        while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
        }

        return new File([u8arr], filename, { type: mime });
    }

    Array.from(croppedImages).forEach((img, index) => {
        formData.append(`images`, dataURLtoFile(img.src, `croppedImage${index + 1}.png`));
    });

    fetch(form.action, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Product Updated',
                text: 'Product has been updated successfully'
            }).then(() => {
                window.location.href = '/admin/products';
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Update Failed',
                text: data.message || 'Failed to update product'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while updating the product'
        });
    });

    return false;
}

    function deleteExistingImage(imageName, index) {
        Swal.fire({
            title: 'Remove Existing Image',
            text: 'Are you sure you want to remove this image?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
            if (result.isConfirmed) {
                const container = document.getElementById(`existingImageContainer${index}`);
                if (container) {
                    container.remove();
                }
                
                if (!deletedImages.includes(imageName)) {
                    deletedImages.push(imageName);
                }
                
                document.getElementById('deletedImagesInput').value = JSON.stringify(deletedImages);

                Swal.fire({
                    icon: 'success',
                    title: 'Image Removed',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
            }
        });
    }

    function openCropperModal(event) {
    const files = event.target.files;
    if (!files || files.length === 0) return;

    const file = files[0];

    const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
    if (!validTypes.includes(file.type)) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid File Type',
            text: 'Please upload a valid image (JPEG, PNG, GIF, or WebP)',
            confirmButtonColor: '#3085d6'
        });
        return;
    }

    const reader = new FileReader();
    reader.onload = function(e) {
        const cropperImage = document.getElementById('cropperImage');
        cropperImage.src = e.target.result;

        if (cropper) {
            cropper.destroy();
        }

        cropper = new Cropper(cropperImage, {
            aspectRatio: 1, 
            viewMode: 1,
            minCropBoxWidth: 100,
            minCropBoxHeight: 100
        });

        document.getElementById('cropperModal').style.display = 'block';
    };
    reader.readAsDataURL(file);
}

    function saveCroppedImage() {
        if (!cropper) return;

        if (existingImages.length - deletedImages.length + croppedImagesCount >= 4) {
            Swal.fire({
                icon: 'error',
                title: 'Image Count Invalid',
                text: 'Maximum 4 images allowed',
                confirmButtonColor: '#3085d6'
            });
            closeCropperModal();
            return;
        }

        const croppedCanvas = cropper.getCroppedCanvas();
        const croppedDataUrl = croppedCanvas.toDataURL('image/jpeg');

        const thumbnailContainer = document.createElement('div');
        thumbnailContainer.style.position = 'relative';

        const thumbnailImg = document.createElement('img');
        thumbnailImg.src = croppedDataUrl;
        thumbnailImg.classList.add('thumbnail');

        const removeBtn = document.createElement('button');
        removeBtn.innerHTML = '&times;';
        removeBtn.classList.add('remove-image-btn');
        removeBtn.onclick = () => removeCroppedImage(thumbnailContainer);

        thumbnailContainer.appendChild(thumbnailImg);
        thumbnailContainer.appendChild(removeBtn);

        const addedImagesContainer = document.getElementById('addedImagesContainer');
        addedImagesContainer.appendChild(thumbnailContainer);

        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = `croppedImage${croppedImagesCount + 1}`;
        hiddenInput.value = croppedDataUrl;
        document.querySelector('form').appendChild(hiddenInput);

        croppedImagesCount++;

        document.getElementById('imageUpload').value = '';

        closeCropperModal();
    }

    function removeCroppedImage(thumbnailContainer) {
        Swal.fire({
            title: 'Remove Image',
            text: 'Are you sure you want to remove this image?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
            if (result.isConfirmed) {
                thumbnailContainer.remove();

                croppedImagesCount--;

                Swal.fire({
                    icon: 'success',
                    title: 'Image Removed',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
            }
        });
    }

    function closeCropperModal() {
        document.getElementById('cropperModal').style.display = 'none';

        if (cropper) {
            cropper.destroy();
            cropper = null;
        }

        document.getElementById('imageUpload').value = '';
    }


</script>

<%- include("../../views/partials/admin/footer") %>
