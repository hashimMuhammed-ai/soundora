<%- include("../../views/partials/admin/header") %>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
    }

    .container {
        width: 80%;
        margin: auto;
        background: white;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin-top: 110px;
        margin-left: 270px;
    }

    h2 {
        text-align: center;
    }

    .top-buttons {
        display: flex;
        justify-content: end;
        gap: 10px;
    }

    button {
        padding: 8px 12px;
        border: none;
        cursor: pointer;
        border-radius: 4px;
    }

    .pdf-btn {
        background: linear-gradient(to right, #FFD700, #FF8C00); 
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
        
    }
    .pdf-btn:hover{
        background: linear-gradient(to right, #FF8C00, #af7105); 
    }

    .excel-btn {
        background: linear-gradient(to right, #509352, #213f23);
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }
    
    .excel-btn:hover {
        background: linear-gradient(to right, #2d562e, #285a29); 
    }
    
    .top-buttons {
        display: flex;
        justify-content: flex-end;
        margin-bottom: 20px;
    }

    .filter-container {
        display: flex;
        align-items: center;
        gap: 15px;
        background: #fff;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        justify-content: center;
    }
    
    .filter-group {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
    
    .filter-select, .date-input {
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
        font-size: 16px;
        transition: 0.3s;
    }
    
    .filter-select:focus, .date-input:focus {
        outline: none;
        border-color: #FFD700;
        box-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
    }
    
    .date-range {
        display: flex;
        gap: 17px;
        align-items: center;
        justify-content: center;
    }
    
    .btn.filter-btn {
        background: linear-gradient(to right, #4dd686, #27e112);
        color: white;
        font-weight: bold;
        padding: 12px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
        margin-top: 20px;
    }
    .btn.filter-btn:hover {
        background: linear-gradient(to right, #29794b, #157a0a);
    }

    .summary {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .box {
        background: #f0f0f0;
        padding: 15px;
        border-radius: 5px;
        text-align: center;
        width: 30%;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    
    .box h4 {
        margin-top: 0;
        color: #333;
    }
    
    .box p {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 0;
        color: #444;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    table,
    th,
    td {
        border: 1px solid #ddd;
    }

    th,
    td {
        padding: 10px;
        text-align: left;
    }

    th {
        background: #333;
        color: white;
    }
    
    tr:nth-child(even) {
        background-color: #f9f9f9;
    }
    
    tr:hover {
        background-color: #f0f0f0;
    }

    .status {
        padding: 5px;
        border-radius: 5px;
        text-align: center;
        font-weight: bold;
    }

    /* Existing statuses */
    .delivered {
        background-color: #7cdd93; /* Green */
        color: rgb(26, 70, 16);
    }

    .cancelled {
        background-color: #dc3545; /* Red */
        color: white;
    }

    .pending {
        background-color: #c4b178; /* Yellow */
        color: rgb(171, 126, 0);
    }

    /* New return statuses */
    .return-rejected {
        background-color: #e6828c; /* Red */
        color: rgb(150, 20, 20);
    }

    .return-approved {
        background-color: #88c16e; /* Blue */
        color: rgb(19, 129, 0);
    }
    
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination a {
        color: white;
        background-color: black;
        padding: 8px 12px;
        margin: 2px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        transition: background-color 0.3s;
    }

    .pagination a.active {
        background-color: #444;
    }

    .pagination a:hover {
        background-color: #666;
    }
    
    .no-results {
        text-align: center;
        padding: 20px;
        font-style: italic;
        color: #777;
    }
    
    .filter-active {
        background-color: #f0f8ff;
        border: 2px solid #FFD700;
        padding: 8px;
        margin-bottom: 10px;
        text-align: center;
        border-radius: 5px;
    }
</style>
<div class="container">
    <h2>Sales Report</h2>
    
    <div class="top-buttons">
        <a href="/admin/salesReportPDF/pdf<%= filterType ? `?filterType=${filterType}` : '' %><%= fromDate ? `&fromDate=${fromDate}` : '' %><%= toDate ? `&toDate=${toDate}` : '' %>">
            <button class="pdf-btn">Download PDF</button>
        </a>
        <a href="/admin/salesReportExcel/excel<%= filterType ? `?filterType=${filterType}` : '' %><%= fromDate ? `&fromDate=${fromDate}` : '' %><%= toDate ? `&toDate=${toDate}` : '' %>">
            <button class="excel-btn">Download Excel</button>
        </a>
    </div>

    <form id="filterForm" action="/admin/salesReport" method="GET" class="filter-container">
        <div class="filter-group">
            <label for="filterType">Filter By:</label>
            <select name="filterType" id="filterType" class="filter-select">
                <option value="All" <%= filterType === 'All' || !filterType ? 'selected' : '' %>>All Time</option>
                <option value="Daily" <%= filterType === 'Daily' ? 'selected' : '' %>>Daily</option>
                <option value="Weekly" <%= filterType === 'Weekly' ? 'selected' : '' %>>Weekly</option>
                <option value="Monthly" <%= filterType === 'Monthly' ? 'selected' : '' %>>Monthly</option>
                <option value="Yearly" <%= filterType === 'Yearly' ? 'selected' : '' %>>Yearly</option>
                <option value="Custom" <%= filterType === 'Custom' || (!filterType && !fromDate && !toDate) ? 'selected' : '' %>>Custom Range</option>
            </select>
        </div>
        
        <div id="dateRangeFields" class="date-range" style=" <%= (fromDate && toDate) || filterType === 'Custom' ? 'display: flex;' : 'display: none;' %>">
            <div class="filter-group">
                <label for="fromDate">From:</label>
                <input type="date" name="fromDate" id="fromDate" value="<%= fromDate || '' %>" class="date-input">
            </div>
            
            <div class="filter-group">
                <label for="toDate">To:</label>
                <input type="date" name="toDate" id="toDate" value="<%= toDate || '' %>" class="date-input">
            </div>
        </div>
        
        <button type="submit" class="btn filter-btn">Apply Filter</button>
    </form>
    

<% if (filterType !== 'All') { %>
    <div class="filter-active">
        <strong>Active Filter:</strong>
        <% if (filterType === 'Daily') { %>
            Today
        <% } else if (filterType === 'Weekly') { %>
            This Week (From Sunday)
        <% } else if (filterType === 'Monthly') { %>
            Current Month
        <% } else if (filterType === 'Yearly') { %>
            Current Year
        <% } else if (fromDate && toDate) { %>
            Custom: <%= new Date(fromDate).toLocaleDateString() %> to <%= new Date(toDate).toLocaleDateString() %>
        <% } else { %>
            <%= filterType %>
        <% } %>
    </div>
<% } %>

    <div class="summary">
        <div class="box">
            <h4>Overall Sales Count</h4>
            <p><%- totalOrders %></p>
        </div>
        <div class="box">
            <h4>Overall Sales Amount</h4>
            <p>₹<%- totalSales.toLocaleString() %>.00</p>
        </div>
    </div>

    <!-- Sales data table -->
    <% if (orders.length > 0) { %>
        <table>
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Customer Name</th>
                    <th>Product</th>
                    <th>Order Status</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <tr>
                        <td>#<%- order.orderId %></td>
                        <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                        <td><%= order.userId.name %></td>
                        <td><%- order.items[0].productId.productName %></td>
                        <td class="status <%= order.status.replace(/\s+/g, '-').toLowerCase() %>">
                            <%= order.status %>
                        </td>
                        <td>₹ <%= order.totalAmount ? order.totalAmount.toFixed(2) : order.total.toFixed(2) %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
        
       <!-- Pagination -->
    <%
      const queryParams = [];
      if (filterType) queryParams.push(`filterType=${filterType}`);
      if (fromDate) queryParams.push(`fromDate=${fromDate}`);
      if (toDate) queryParams.push(`toDate=${toDate}`);
      const queryString = queryParams.length ? '&' + queryParams.join('&') : '';
    %>

    <div class="pagination">
        <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %><%= queryString %>">&laquo; Prev</a>
        <% } %>

        <% for (let i = 1; i <= totalPages; i++) { %>
            <a href="?page=<%= i %><%= queryString %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
        <% } %>

        <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %><%= queryString %>">Next &raquo;</a>
        <% } %>
    </div>

    <% } else { %>
        <div class="no-results">
            <p>No sales data found for the selected period.</p>
        </div>
    <% } %>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const filterType = document.getElementById('filterType');
        const dateRangeFields = document.getElementById('dateRangeFields');
        const fromDate = document.getElementById('fromDate');
        const toDate = document.getElementById('toDate');
        
        // Show/hide date fields based on filter type
        filterType.addEventListener('change', function() {
            if (this.value === 'Custom') {
                dateRangeFields.style.display = 'flex';
                fromDate.required = true;
                toDate.required = true;
            } else {
                dateRangeFields.style.display = 'none';
                fromDate.required = false;
                toDate.required = false;

                // Clear date values when switching to a preset filter
                fromDate.value = '';
                toDate.value = '';
            }
        });

        // ✅ Show date fields on page load if "Custom" was already selected
        if (filterType.value === 'Custom') {
            dateRangeFields.style.display = 'flex';
            fromDate.required = true;
            toDate.required = true;
        }

        // Form validation
        document.getElementById('filterForm').addEventListener('submit', function(e) {
            if (filterType.value === 'Custom') {
                if (!fromDate.value || !toDate.value) {
                    e.preventDefault();
                    alert('Please select both start and end dates for custom range');
                } else if (new Date(fromDate.value) > new Date(toDate.value)) {
                    e.preventDefault();
                    alert('Start date cannot be after end date');
                }
            }
        });
    });
</script>


<%- include("../../views/partials/admin/footer") %>