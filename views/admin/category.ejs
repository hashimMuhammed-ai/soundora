<%- include("../../views/partials/admin/header") %>

  <style>
    .content-main {
      padding: 30px;
      padding-top: 90px;
      padding-left: 300px;
    }

    .content-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 30px;
    }

    .content-title {
      color: #333;
      font-size: 24px;
      font-weight: 600;
      margin: 0;
    }

    .category-container {
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      padding: 25px;
    }

    .category-form {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 20px;
      margin-bottom: 30px;
    }

    .category-form form {
      display: flex;
      align-items: flex-end;
      gap: 15px;
      flex-wrap: wrap;
    }

    .form-group {
      flex: 1;
      min-width: 200px;
      margin: 0;
    }

    .category-form .form-label {
      font-weight: 500;
      color: #4a5568;
      margin-bottom: 8px;
    }

    .category-form .form-control {
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      padding: 10px 15px;
      transition: all 0.3s ease;
    }

    .category-form .form-control:focus {
      border-color: #4299e1;
      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);
    }

    .btn-add-category {
      background: linear-gradient(45deg, #ffa500, #ffd700);
    color: white;
    margin-right: 0.5rem;
      border: none;
      padding: 10px 24px;
      border-radius: 6px;
      font-weight: 500;
      height: 42px;
      transition: all 0.3s ease;
    }

    .btn-add-category:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(66, 153, 225, 0.15);
      background: linear-gradient(45deg, #ff8c00, #ffc000);
    }

    .category-table {
      margin-top: 20px;
    }

    .table {
      width: 100%;
      background: #fff;
      border-radius: 8px;
    }

    .table thead th {
      background: #f7fafc;
      color: #4a5568;
      font-weight: 600;
      padding: 15px;
      border-bottom: 2px solid #e2e8f0;
    }

    .table tbody td {
      padding: 15px;
      vertical-align: middle;
      border-bottom: 1px solid #e2e8f0;
    }

    .badge {
      padding: 6px 12px;
      font-weight: 500;
      font-size: 12px;
      border-radius: 20px;
    }

    .badge.alert-success {
      background: #ebf8f4;
      color: #0f766e;
    }

    .badge.alert-danger {
      background: #fef2f2;
      color: #dc2626;
    }

    .btn-action {
      padding: 8px 16px;
      border-radius: 6px;
      font-weight: 500;
      font-size: 13px;
      margin-right: 8px;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 90px;
    }

    .btn-action.btn-danger {
      background: #fee2e2;
      color: #dc2626;
      border: 1px solid #fecaca;
    }

    .btn-action.btn-danger:hover {
      background: #fecaca;
      border-color: #ef4444;
      transform: translateY(-1px);
    }

    .btn-action.btn-success {
      background: #ecfdf5;
      color: #059669;
      border: 1px solid #d1fae5;
    }

    .btn-action.btn-success:hover {
      background: #d1fae5;
      border-color: #10b981;
      transform: translateY(-1px);
    }

    .actions-cell {
      white-space: nowrap;
    }

    .pagination-container {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      margin-top: 30px;
    }

    .pagination-btn {
      padding: 8px 16px;
      border-radius: 6px;
      font-weight: 500;
      font-size: 14px;
      text-decoration: none;
      transition: all 0.3s ease;
      border: 1px solid #e2e8f0;
      background: #fff;
      color: #4a5568;
      min-width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .pagination-btn:hover {
      background: #f7fafc;
      border-color: #4299e1;
      color: #4299e1;
      transform: translateY(-1px);
    }

    .pagination-btn.active {
      background: linear-gradient(45deg, #4299e1, #667eea);
      border-color: transparent;
      color: white;
    }

    .pagination-btn.disabled {
      opacity: 0.5;
      pointer-events: none;
      cursor: not-allowed;
    }
    .error-message{
      color:#dc2626
    }
  </style>

  <!-- Add SweetAlert2 -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title">Category Management</h2>
      </div>
    </div>

    <div class="category-container">
      <!-- Search Bar -->
            <div class="search-container">
                <form method="GET" action="/admin/category">
                    <div class="input-group">
                        <input type="text" name="search" value="<%= search || '' %>" id="searchInput" class="form-control" placeholder="Search by category name" 
                            style="height: 40px;width: 272px;padding: 10px;">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                    
                </form>
            </div>
      <!-- Add Category Form -->
      <div class="category-form">
        <h4 class="mb-4">Add New Category</h4>
        <form id="addCategoryForm" method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
          <div class="form-group">
            <label for="categoryName" class="form-label">Category Name</label>
            <input type="text" id="categoryName" name="name" placeholder="Enter category name" class="form-control"
               />
            <div id="name-error" class="error-message"></div>
          </div>
          <div class="form-group">
            <label for="description" class="form-label">Description</label>
            <textarea id="description" name="description" placeholder="Enter category description" class="form-control"
              ></textarea>
            <div id="description-error" class="error-message"></div>
          </div>
          <div class="form-group">
            <label for="category-offer" class="form-label">Offer</label>
            <textarea id="category-offer" name="categoryOffer" placeholder="Enter category offer" class="form-control"
              ></textarea>
            <div id="category-offer-error" class="error-message"></div>
          </div>
          <button class="btn-add-category" type="submit">
            Add Category
          </button>
        </form>
      </div>

      <!-- Categories Table -->
      <div class="category-table">
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>Category</th>
                <th>Description</th>
                <th>Category Offer</th>
                <th>List/Unlist</th>
                <th class="text-end">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% cat.forEach((category)=> { %>
                <tr>
                  <td>
                    <%= category.name %>
                  </td>
                  <td>
                    <%= category.description %>
                  </td>
                  <td>
                    <%= category.categoryOffer + '%' %>
                  </td>
                  <td>
                    
                    <div class="form-check form-switch d-flex align-items-center justify-content-start">
                      <input type="checkbox" class="form-check-input toggle-status" data-id="<%= category._id %>"
                        <%=category.isListed ? 'checked' : '' %>
                      />
                      <span class="status-label ms-2 <%= category.isListed ? 'text-success' : 'text-danger' %>">
                        <%= category.isListed ? 'Listed' : 'Unlisted' %>
                      </span>
                    </div>
                  </td>
                  <td class="text-end">
                    <a href="/admin/editCategory/?id=<%= category._id %>">
                      <button class="btn btn-sm btn-outline-primary edit-category" title="Edit Category" style="
                            background-color: black;color: wheat;width: 64px;height: 58px;">
                        <i class="fas fa-edit me-1"></i> Edit
                      </button>
                    </a>
                  </td>
                </tr>
                <% }); %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="pagination-container">
          <% if (currentPage> 1) { %>
            <a href="?page=<%= currentPage - 1 %>" class="pagination-btn">
              <i class="fas fa-chevron-left"></i>
            </a>
            <% } %>

              <% let startPage=Math.max(1, currentPage - 2); let endPage=Math.min(totalPages, startPage + 4); if
                (endPage - startPage < 4) { startPage=Math.max(1, endPage - 4); } if (startPage> 1) { %>
                <a href="?page=1" class="pagination-btn">1</a>
                <% if (startPage> 2) { %>
                  <span class="pagination-btn disabled">...</span>
                  <% } %>
                    <% } %>

                      <% for (let i=startPage; i <=endPage; i++) { %>
                        <a href="?page=<%= i %>" class="pagination-btn <%= currentPage == i ? 'active' : '' %>">
                          <%= i %>
                        </a>
                        <% } %>

                          <% if (endPage < totalPages) { %>
                            <% if (endPage < totalPages - 1) { %>
                              <span class="pagination-btn disabled">...</span>
                              <% } %>
                                <a href="?page=<%= totalPages %>" class="pagination-btn">
                                  <%= totalPages %>
                                </a>
                                <% } %>

                                  <% if (currentPage < totalPages) { %>
                                    <a href="?page=<%= currentPage + 1 %>" class="pagination-btn">
                                      <i class="fas fa-chevron-right"></i>
                                    </a>
                                    <% } %>
        </div>
      </div>
    </div>
  </section>

  <script>
    function handleFormSubmit(event) {
      event.preventDefault();
      clearErrorMessages();

      const nameInput = document.getElementById('categoryName');
      const descriptionInput = document.getElementById('description');
      const categoryOfferInput = document.getElementById('category-offer')
      let isValid = true;

      if (!nameInput.value.trim()) {
        showError('name-error', 'Category name is required');
        isValid = false;
      } else if (nameInput.value.length < 3) {
        showError('name-error', 'Category name must be at least 3 characters');
        isValid = false;
      }

      if (!descriptionInput.value.trim()) {
        showError('description-error', 'Description is required');
        isValid = false;
      } else if (descriptionInput.value.length < 10) {
        showError('description-error', 'Description must be at least 10 characters');
        isValid = false;
      }

      // if(!categoryOfferInput.value.trim()){
      //   showError('category-offer-error', 'Category offer is required');
      //   isValid = false;
      // }else{ 
      //    const offerValue = parseFloat(categoryOfferInput.value.trim());
      //    if (isNaN(offerValue) || offerValue < 0 || offerValue > 100) {
      //    showError('category-offer-error', 'Category offer must be a number between 0 and 100');
      //    isValid = false;
      //   }
      // }

      if (isValid) {
        // const formData = new FormData();
        // formData.append('name', nameInput.value.trim());
        // formData.append('description', descriptionInput.value.trim());
        // formData.append('category-offer',categoryOfferInput.value.trim())
        const data = {
          name: nameInput.value.trim(),
          description: descriptionInput.value.trim(),
          categoryOffer:categoryOfferInput.value.trim()
        }
        fetch('/admin/addCategory', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Category added successfully',
                showConfirmButton: false,
                timer: 1500
              }).then(() => {
                window.location.reload(); // Force page reload
              });
            } else {
              throw new Error(data.message || 'Failed to add category');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error!',
              text: error.message || 'Failed to add category',
            });
          });
      }

      return false;
    }

    function showError(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.textContent = message;
      errorElement.classList.add('show');
    }

    function clearErrorMessages() {
      const errorElements = document.querySelectorAll('.error-message');
      errorElements.forEach(element => {
        element.textContent = '';
        element.classList.remove('show');
      });
    }

    // Toggle Status Handler
    document.querySelectorAll('.toggle-status').forEach(toggle => {
      toggle.addEventListener('change', function () {
        const categoryId = this.dataset.id;
        const isListed = this.checked;
        const statusLabel = this.parentElement.querySelector('.status-label');

        Swal.fire({
          title: 'Are you sure?',
          text: `Do you want to ${isListed ? 'list' : 'unlist'} this category?`,
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, update it!'
        }).then((result) => {
          if (result.isConfirmed) {
            // Update status
            fetch(`/admin/toggleCategory/${categoryId}`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ isListed })
            })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  statusLabel.textContent = isListed ? 'Listed' : 'Unlisted';
                  statusLabel.className = `status-label ms-2 ${isListed ? 'text-success' : 'text-danger'}`;

                  Swal.fire({
                    icon: 'success',
                    title: 'Updated!',
                    text: `Category has been ${isListed ? 'listed' : 'unlisted'}`,
                    showConfirmButton: false,
                    timer: 1500
                  });
                } else {
                  throw new Error(data.message || 'Update failed');
                }
              })
              .catch(error => {
                console.error('Error:', error);
                this.checked = !isListed; // Revert toggle
                Swal.fire({
                  icon: 'error',
                  title: 'Error!',
                  text: 'Failed to update category status',
                });
              });
          } else {
            this.checked = !isListed; // Revert toggle if cancelled
          }
        });
      });
    });
  </script>

  <%- include("../../views/partials/admin/footer") %>